/* Write a code to calculate the sum of amount of all the opportunities assigned to a sales rep 
and calculate monthly summary of closed won opportunities. 
Custom object with user lookup, Month, year , Total Revenue is used to store the monthly revenue generated by the sales rep.  */
public with sharing class BatchApexTotalRevenueByRep implements Database.Batchable<SObject>,Database.RaisesPlatformEvents{
    
    public Iterable<AggregateResult> start(Database.BatchableContext bc){
        return new CustomIterable();

    }

    public void execute(Database.BatchableContext bc,List<AggregateResult> scope){
        List<Reps_Revenue_Summary__c> summaryList= new List<Reps_Revenue_Summary__c>();
        for(AggregateResult rec : scope){
            Reps_Revenue_Summary__c rrs = new Reps_Revenue_Summary__c();
            rrs.Sales_Rep__c = (Id)rec.get('OwnerId');
            rrs.Year__c = (Integer)rec.get('Year');
            rrs.Month__c = (Integer)rec.get('Month');
            rrs.Total_Revenue__c = (Decimal)rec.get('TotalAmt');
            rrs.Unique_Indetifier__c = (string)rec.get('OwnerId')+(string)rec.get('Year')+(Integer)rec.get('Month');
            summaryList.add(rrs);
        }
        //upsert as user summaryList Unique_Indetifier__c ;
        List<Database.SaveResult> results = Database.Upsert(summaryList,Unique_Indetifier__c,false,AccessLevel.USER_MODE);
        if(results!= null && !result.isEmpty){
            for(Database.SaveResult res : results){
                if(res.isSuccess()){
                    system.debug('record upserted successfully'+res.getId());
                }else{
                    for(Database.Error err: res.getErrors()){
                        system.debug(err.getMessage()+err.getStatusCode());
                    }
                }
            }
        }
    }
    public void finish(Database.BatchableContext bc){
        system.debug('Batch Job Completed Successfully');
        AsyncApexJob jobRec = [select Id,CreatedBy.Email from AsyncApexJob where Id =:bc.getJobId()];
        Messaging.SingleEmailMessage emailMsg = new Messaging.SingleEmailMessage();
        emailMsg.settoaddresses(new List<string>{jobRec?.CreatedBy.Email});
        emailMsg.setplaintextbody('Batch Job Completed Successfully');
        emailMsg.setSubject('Sales Rep Revenue Summary Batch Job Completed !!');
        Messaging.sendEmail(new List<Messaging.SingleEmailMessage>{emailMsg});
    }
}